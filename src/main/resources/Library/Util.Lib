fun assertEqual(ActualValue, ExpectedValue, errorInfo){
    if(ActualValue != ExpectedValue ) print errorInfo;
    else print "Pass assertion";
}

fun PrintLine(line){
    print line;
}

fun getLeft(a:(any,any)){
    return left(a);
}

fun getRight(a:(any,any)){
    return right(a);
}


fun evaluateE(function){
    return function();
}

fun Exclusive(choose, thenBranch, elseBranch){
    if(choose == "yes") return thenBranch;
    else return elseBranch;
}

fun Parallel(food,save,eat){
    print("Start Para");
    return tuple(tuple(food, save),tuple(food, eat));
}

fun evaluateP(functions){
    var leftT = left(functions);
    var rightT = right(functions);

    var leftF = right(leftT);
    var rightF = right(rightT);

    leftF(left(leftT));
    rightF(left(rightT));

    print "Finish Parallel running";
}





PrintLine("Util library loading completed");

